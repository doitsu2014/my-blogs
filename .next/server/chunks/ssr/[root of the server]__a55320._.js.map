{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/roboto_c385f9ea.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"roboto_c385f9ea-module__IUXC9W__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/roboto_c385f9ea.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Roboto%22,%22arguments%22:[{%22weight%22:%22400%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22roboto%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Roboto', 'Roboto Fallback'\",\n        fontWeight: 400,\nfontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,yJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,YAAY;QACpB,WAAW;IAEP;AACJ;AAEA,IAAI,yJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,yJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/services/graphQlClient.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\n\nconst client = new ApolloClient({\n  uri: 'https://my-cms-api.ducth.dev/graphql/immutable',\n  cache: new InMemoryCache()\n});\n\nexport default client;\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,SAAS,IAAI,mXAAA,CAAA,eAAY,CAAC;IAC9B,KAAK;IACL,OAAO,IAAI,iXAAA,CAAA,gBAAa;AAC1B;uCAEe"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/services/categories.ts"],"sourcesContent":["import { gql } from '@apollo/client';\nimport client from './graphQlClient';\n\nexport class CategoryModel {\n  id: string;\n  parentId: string | undefined;\n  displayName: string;\n  slug: string;\n  selfRefReverse: CategoryModel[];\n\n  constructor(\n    id: string,\n    parentId: string,\n    displayName: string,\n    slug: string,\n    selfRefReverse: CategoryModel[]\n  ) {\n    this.id = id;\n    this.parentId = parentId;\n    this.displayName = displayName;\n    this.slug = slug;\n    this.selfRefReverse = selfRefReverse;\n  }\n}\n\nexport async function getCategories(): Promise<CategoryModel[]> {\n  const res = await client.query({\n    query: gql`\n      {\n        categories(filters: { categoryType: { eq: BLOG }, parentId: { is_null: \"true\" } }) {\n          nodes {\n            id\n            parentId\n            displayName\n            slug\n            selfRefReverse {\n              nodes {\n                id\n                displayName\n                slug\n              }\n            }\n          }\n        }\n      }\n    `\n  });\n\n  return res.data.categories.nodes;\n}\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGO,MAAM;IACX,GAAW;IACX,SAA6B;IAC7B,YAAoB;IACpB,KAAa;IACb,eAAgC;IAEhC,YACE,EAAU,EACV,QAAgB,EAChB,WAAmB,EACnB,IAAY,EACZ,cAA+B,CAC/B;QACA,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,cAAc,GAAG;IACxB;AACF;AAEO,eAAe;IACpB,MAAM,MAAM,MAAM,uIAAA,CAAA,UAAM,CAAC,KAAK,CAAC;QAC7B,OAAO,kOAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;;;;IAkBX,CAAC;IACH;IAEA,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK;AAClC"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/my-navbar-link.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/my-navbar-link.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/my-navbar-link.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyS,GACtU,uEACA"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/my-navbar-link.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/my-navbar-link.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/my-navbar-link.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oXAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqR,GAClT,mDACA"}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport './globals.css';\nimport { ThemeModeScript } from 'flowbite-react';\nimport Link from 'next/link';\nimport { Navbar, NavbarBrand, NavbarCollapse, NavbarToggle } from 'flowbite-react';\nimport Image from 'next/image';\nimport { Roboto } from 'next/font/google';\nimport { getCategories } from './services/categories';\nimport MyNavbarLink from './components/my-navbar-link';\n\nconst roboto = Roboto({\n  weight: '400',\n  subsets: ['latin']\n});\n\nexport const metadata: Metadata = {\n  title: 'Create Next App',\n  description: 'Generated by create next app'\n};\n\nexport default async function RootLayout({\n  children\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const categories = await getCategories();\n  return (\n    <html lang=\"en\">\n      <head>\n        <ThemeModeScript />\n      </head>\n      <body className={`${roboto.className} antialiased`}>\n        <Navbar fluid rounded>\n          <NavbarBrand as={Link} href=\"/\">\n            <Image\n              src=\"/images/doitsu-technology-logo.png\"\n              width={60}\n              height={60}\n              className=\"mr-3\"\n              alt=\"Doitsu Technology\"\n            />\n            <span className=\"self-center whitespace-nowrap text-xl font-semibold dark:text-white\">\n              D Tech\n            </span>\n          </NavbarBrand>\n          <NavbarToggle />\n          <NavbarCollapse>\n            <MyNavbarLink slug=\"/\" displayName=\"Home\"></MyNavbarLink>\n            {categories.map((category) => (\n              <MyNavbarLink\n                slug={`/blogs/${category.slug}`}\n                displayName={category.displayName}\n                key={category.id}\n              ></MyNavbarLink>\n            ))}\n          </NavbarCollapse>\n        </Navbar>\n\n        {children}\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AAEA;AACA;AANA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;AAWO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGR;IACA,MAAM,aAAa,MAAM,CAAA,GAAA,oIAAA,CAAA,gBAAa,AAAD;IACrC,qBACE,6WAAC;QAAK,MAAK;;0BACT,6WAAC;0BACC,cAAA,6WAAC,6WAAA,CAAA,kBAAe;;;;;;;;;;0BAElB,6WAAC;gBAAK,WAAW,GAAG,0IAAA,CAAA,UAAM,CAAC,SAAS,CAAC,YAAY,CAAC;;kCAChD,6WAAC,2VAAA,CAAA,SAAM;wBAAC,KAAK;wBAAC,OAAO;;0CACnB,6WAAC,gWAAA,CAAA,cAAW;gCAAC,IAAI,2PAAA,CAAA,UAAI;gCAAE,MAAK;;kDAC1B,6WAAC,4PAAA,CAAA,UAAK;wCACJ,KAAI;wCACJ,OAAO;wCACP,QAAQ;wCACR,WAAU;wCACV,KAAI;;;;;;kDAEN,6WAAC;wCAAK,WAAU;kDAAsE;;;;;;;;;;;;0CAIxF,6WAAC,iWAAA,CAAA,eAAY;;;;;0CACb,6WAAC,mWAAA,CAAA,iBAAc;;kDACb,6WAAC,iJAAA,CAAA,UAAY;wCAAC,MAAK;wCAAI,aAAY;;;;;;oCAClC,WAAW,GAAG,CAAC,CAAC,yBACf,6WAAC,iJAAA,CAAA,UAAY;4CACX,MAAM,CAAC,OAAO,EAAE,SAAS,IAAI,EAAE;4CAC/B,aAAa,SAAS,WAAW;2CAC5B,SAAS,EAAE;;;;;;;;;;;;;;;;;oBAMvB;;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}